{"version":3,"sources":["components/toastEx/styles.module.css","components/dependencyWidget/index.jsx","index.js","components/dependencyWidget/styles.module.css"],"names":["module","exports","WidgetTry","elements","id","content","renderCondition","_useState","useState","_useState2","_slicedToArray","currentState","setState","handleStateChange","e","console","log","target","uniqueKey","lastId","at","stringIdentifier","slice","copyStateObject","key","Number","alterCurrentState","renderCommands","renderConditionForCurrentId","_jsx","Container","children","_jsxs","Row","Col","className","styles","headings","join","blockMain","map","keys","indexI","lg","md","concat","selected","unselected","block","onClick","contentDisplayOk","contentDisplayNone","comandBlock","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.074d0a54.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"styles_header__3q87x\"};","import Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport styles from './styles.module.css';\r\nimport { useState } from 'react';\r\n\r\n\r\nfunction AutoLayoutSizingExample() {\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col className={[styles.columnElem, styles.titleBlock].join(' ')}>1 of 3</Col>\r\n        <Col className={styles.columnElem} xs={6}>2 of 3 (wider)</Col>\r\n        <Col>3 of 3</Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>1 of 3</Col>\r\n        <Col xs={5}>2 of 3 (wider)</Col>\r\n        <Col>3 of 3</Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nfunction WidgetTry() {\r\n// use map to render each out, state to track which element is selected, render the last element based on conditions for each output\r\n\r\n// Store which index tab is active (Not all) (0 index)\r\nconst elements = {\r\n    'build': [\r\n        {\r\n            id: 0,\r\n            content: \"Post Nightly\"\r\n\r\n        },\r\n        {\r\n            id: 1,\r\n            content: \"Stable\"\r\n        }\r\n    ],\r\n    'OS': [\r\n        {\r\n            id: 0,\r\n            content: \"MACOS\"\r\n\r\n        },\r\n        {\r\n            id: 1,\r\n            content: \"Windows\"\r\n\r\n        },\r\n        {\r\n            id: 2,\r\n            content: \"Linux\"\r\n\r\n        }\r\n    ],\r\n    'commands': [\r\n        {\r\n            id: 0,\r\n            content: \"Download our Post Nightly and MacoS version here - [Link]\",\r\n            renderCondition: {\r\n                \"build\": 0,\r\n                \"os\": 0 \r\n            }\r\n            // Contains the position of build tab and OS tab\r\n\r\n        },\r\n        {\r\n            id: 1,\r\n            content: \"Download our Post Nightly and Windows version here - [Link]\",\r\n            renderCondition: {\r\n                \"build\": 0,\r\n                \"os\": 1 \r\n            }\r\n\r\n        },\r\n        {\r\n            id: 2,\r\n            content: \"Download our Post Nightly and Linux version here - [Link]\",\r\n            renderCondition: {\r\n                \"build\": 0,\r\n                \"os\": 2 \r\n            }\r\n\r\n        },\r\n        {\r\n            id: 3,\r\n            content: \"Download our Stable and MacoS version here - [Link]\",\r\n            renderCondition: {\r\n                \"build\": 1,\r\n                \"os\": 0 \r\n            }\r\n\r\n        },\r\n        {\r\n            id: 4,\r\n            content: \"Download our Stable and Windows version here - [Link]\",\r\n            renderCondition: {\r\n                \"build\": 1,\r\n                \"os\": 1\r\n            }\r\n\r\n        },\r\n        {\r\n            id: 5,\r\n            content: \"Download our Stable and Linux version here - [Link]\",\r\n            renderCondition: {\r\n                \"build\": 1,\r\n                \"os\": 2\r\n            }\r\n\r\n        },\r\n\r\n    ]\r\n}\r\n\r\n\r\n    const [currentState, setState] = useState({\r\n        'build': 0,\r\n        'os': 0,\r\n    });\r\n\r\n    // Based on above two the \"run this\" should get decided\r\n\r\n    // const handleTabClick = (e) => {\r\n    //     setCurrentTab(e.target.id);\r\n    // }\r\n\r\n    const alterCurrentState = (uniqueKey) => {\r\n\r\n        const lastId= uniqueKey.at(-1);\r\n        console.log(\"lastId\", lastId)\r\n        const stringIdentifier = uniqueKey.slice(0, -1);\r\n        console.log(\"stringIdentifier\", stringIdentifier);\r\n\r\n\r\n        // NOTE\r\n        // Cannot assign to currentState (as it is a different elment)\r\n        // We shouldn't reset the other states\r\n        console.log(\"currentState inside\", currentState)\r\n\r\n        \r\n        const copyStateObject = {} // works\r\n\r\n        for(const key in currentState){\r\n            copyStateObject[key] =  currentState[key]\r\n        }\r\n\r\n        console.log(\"typeof(copyStateObject)\", typeof(copyStateObject))\r\n\r\n        console.log(\"copyStateObject\", copyStateObject)\r\n\r\n\r\n\r\n        copyStateObject[stringIdentifier] = Number(lastId);\r\n\r\n        // currentState = lastId;\r\n\r\n\r\n        setState(copyStateObject)\r\n        // currentState[stringIdentifier] = Number(lastId);\r\n    }\r\n\r\n    const handleStateChange = (e) => {\r\n        console.log(e.target.id);\r\n        // console.log(setState);\r\n\r\n        // const lastId= e.target.id[-1];\r\n        alterCurrentState(e.target.id);\r\n        console.log(currentState)\r\n    }\r\n\r\n    const renderCommands = (id) => {\r\n        // Compare current state with the valid state\r\n        const allCommandsArray = elements[\"commands\"];\r\n        const renderConditionForCurrentId = allCommandsArray[id][\"renderCondition\"]\r\n\r\n        for(const key in currentState){\r\n\r\n            // Value in current State   \r\n            // Comapre the below value with 1st value in  \r\n\r\n            if(currentState[key]  != renderConditionForCurrentId[key])\r\n                return false;\r\n            \r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n\r\n    return (\r\n      <Container>\r\n        {/* <h2>Thid works</h2> */}\r\n        <Row>\r\n\r\n          <Col className={[styles.headings].join(' ') + 'col-md-3'}>\r\n\r\n            <Col className={styles.blockMain}>Build</Col>\r\n            <Col className={styles.blockMain}> OS</Col>\r\n\r\n\r\n            <Col className={styles.blockMain}> Run command</Col>\r\n\r\n          </Col>\r\n\r\n\r\n\r\n\r\n\r\n          <Col className='col-md-9'>\r\n\r\n            <Row className='ptbuild'>\r\n                {/* Render all the build elements here and track their states id = build, build1.... for unique identification */}\r\n\r\n                    {elements['build'].map((keys, indexI) => {\r\n                        console.log(\"currentState['build']\", currentState['build'])\r\n                        return(\r\n                            <Col \r\n                            lg={6} \r\n                            md={6}\r\n                            id={'build' + indexI}\r\n                            key={'build' + indexI}\r\n                            className={[currentState['build'] == `${keys['id']}` ? `${styles.selected}`: `${styles.unselected}`, styles.block].join(' ')}\r\n                            onClick={handleStateChange}>\r\n                                \r\n                                {keys.content}\r\n\r\n                            </Col>\r\n                        )\r\n                    })\r\n                    }\r\n\r\n                    {/* <Col className={[styles.blockTest].join(' ')} lg={6} md={6} >Preview Nightly</Col>\r\n                    <Col lg={6} md={6}>Stable</Col> */}\r\n\r\n\r\n            </Row>\r\n\r\n            <Row className='os'>\r\n\r\n                {elements['OS'].map((keys, indexI) => {\r\n                            console.log(\"currentState['os']\", currentState['os'])\r\n                            return(\r\n                                <Col \r\n                                lg={4} \r\n                                md={4}\r\n                                id={'os' + indexI}\r\n                                key={'os' + indexI}\r\n                                className={[currentState['os'] == `${keys['id']}` ? `${styles.selected}`: `${styles.unselected}`, styles.block].join(' ')}\r\n                                onClick={handleStateChange}>\r\n                                    \r\n                                {keys.content}\r\n\r\n                                </Col>\r\n                            )\r\n                        })\r\n                }\r\n\r\n            </Row>\r\n\r\n\r\n            <Row className='command'>\r\n                {/* Different possibilites will go here, based on the tab selected */}\r\n                {/* Total 6 possibilities, first experiment how to hide a specific block */}\r\n\r\n\r\n                {elements['commands'].map((keys, indexI) => {\r\n                            // console.log(\"currentState['os']\", currentState['os'])\r\n                            return(\r\n                                <Col \r\n                                lg={12} \r\n                                md={12}\r\n                                id={'commands' + indexI}\r\n                                key={'commands' + indexI}\r\n                                className={[renderCommands(indexI) ? `${styles.contentDisplayOk}`: `${styles.contentDisplayNone}`, styles.comandBlock].join(' ')}>\r\n                                    \r\n                                {keys.content}\r\n\r\n                                </Col>\r\n                            )\r\n                        })\r\n                }\r\n\r\n\r\n\r\n\r\n\r\n            </Row>\r\n            \r\n            \r\n            \r\n          </Col> \r\n\r\n        </Row>\r\n\r\n      </Container>\r\n    );\r\n  }\r\n\r\n\r\n  function WidgetTry1() {\r\n    return (\r\n      <Container>\r\n        <h2>asdfsdfsdaf</h2>\r\n\r\n\r\n      </Container>\r\n    );\r\n  }\r\n\r\nexport default WidgetTry;","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import App from './App';\n\n// Importing the Bootstrap CSS\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport './index.css';\nimport ToastEx from './components/toastEx'\nimport WidgetTry from './components/dependencyWidget'\n// import App2 from './App2'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    < WidgetTry/>\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"columnElem\":\"styles_columnElem__1fvA9\",\"titleBlock\":\"styles_titleBlock__1g2Qe\",\"blockMain\":\"styles_blockMain__3E0Jo\",\"block\":\"styles_block__dJFGG\",\"quick-starts\":\"styles_quick-starts__1v8JY\",\"option\":\"styles_option__24b4S\",\"selected\":\"styles_selected__34bJ8\",\"contentDisplayNone\":\"styles_contentDisplayNone__1GKKB\",\"contentDisplayOk\":\"styles_contentDisplayOk__1wk-C\",\"comandBlock\":\"styles_comandBlock__2eeD6\"};"],"sourceRoot":""}